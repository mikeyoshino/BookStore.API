@page "/authors/"

@inject IAuthorRepository _repo
@inject NavigationManager _navManager
<h3>Author List</h3>

@if (Model == null)
{
    <LoadingMessage Message="Loading data." />
}
else
{
    <a href="/authors/create" class="btn btn-primary">
        <span class="oi oi-plus">Create New Author</span>
    </a>

    if (Model.Count < 1)
    {
        <LoadingMessage Message="There are no authors. Please create author." />
    }
    else
    {
        <MatTable Items="@Model" class="mat-elevation-z5">
            <MatTableHeader>
                <th width="43%">First Name</th>
                <th width="43%">Last Name</th>
                <th>Action</th>
            </MatTableHeader>
            <MatTableRow>
                <td>@context.FirstName</td>
                <td>@context.LastName</td>
                <td>
                    <a href="/authors/view/@context.Id" class="btn btn-primary">
                        <span class="oi oi-book"></span>
                    </a>
                    <a href="/authors/edit/@context.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <a href="/authors/delete/@context.Id" class="btn btn-danger">
                        <span class="oi oi-delete"></span>
                    </a>
                </td>
            </MatTableRow>
        </MatTable>

    }



}

@code {
    private IList<Author> Model;
    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEndpoint);
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
