@page "/authors/"

@inject IAuthorRepository _repo

<h3>Author List</h3>
@if (Model == null)
{
    <div class="alert alert-dismissible alert-secondary">
        Loading Data...
    </div>
}
else
{
    @*<table class="table table-bordered">
        <thead class="thead-dark">
            <tr>
                <th width="40%">First Name</th>
                <th width="40%">Last Name</th>
                <th width="20%">Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in Model)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <button class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </button>
                        <button class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </button>
                        <button class="btn btn-danger">
                            <span class="oi oi-delete"></span>
                        </button>

                    </td>
                </tr>
            }

        </tbody>
    </table>*@

    <MatTable Items="@Model" class="mat-elevation-z5">
        <MatTableHeader>
            <th width="43%">First Name</th>
            <th width="43%">Last Name</th>
            <th>Action</th>
        </MatTableHeader>
        <MatTableRow>
            <td>@context.FirstName</td>
            <td>@context.LastName</td>
            <td>
                <button class="btn btn-primary">
                    <span class="oi oi-book"></span>
                </button>
                <button class="btn btn-warning">
                    <span class="oi oi-pencil"></span>
                </button>
                <button class="btn btn-danger">
                    <span class="oi oi-delete"></span>
                </button>
            </td>
        </MatTableRow>
    </MatTable>


}

@code {
    private IList<Author> Model;
    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEndpoint);
    }

}
