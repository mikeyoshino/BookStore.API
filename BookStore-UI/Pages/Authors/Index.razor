@page "/authors/"

@inject IAuthorRepository _repo
@attribute [Authorize(Roles = "Administration")]
@inject NavigationManager _navManager
<h3>Author List</h3>

@if (Model == null)
{
    <LoadingMessage Message="Loading data." />
}
else
{
<AuthorizeView Roles="Administration">
    <div class="p-3">
        <a href="/authors/create" class="btn btn-primary">
            <span class="oi oi-plus">Create New Author</span>
        </a>
    </div>
</AuthorizeView>
    

    if (Model.Count < 1)
    {
        <LoadingMessage Message="There are no authors. Please create author." />
    }
    else
    {
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Action</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var author in Model)
                {
                    <tr>
                        <td>@author.FirstName</td>
                        <td>@author.LastName</td>
                        <td>
                            <AuthorizeView Roles="Administration">
                                <a href="/authors/view/@author.Id" class="btn btn-primary">
                                    <span class="oi oi-book"></span>
                                </a>
                                <a href="/authors/edit/@author.Id" class="btn btn-warning">
                                    <span class="oi oi-pencil"></span>
                                </a>
                                <a href="/authors/delete/@author.Id" class="btn btn-danger">
                                    <span class="oi oi-delete"></span>
                                </a>
                            </AuthorizeView>

                        </td>
                    </tr>
                }
                </tbody>
        </table> 

    }



}

@code {
    private IList<Author> Model;
    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEndpoint);
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
